{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","Monsters","map","user","i","Scroll","props","style","overflowY","height","children","SearchBox","searchField","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","this","setState","Component","App","useState","setMonsters","setSearchField","useEffect","fetch","then","response","json","users","filteredMonsters","filter","monster","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAaeA,EAXH,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,MACvB,OACC,sBAAKC,UAAU,oDAAoDH,GAAG,qBAAtE,UACC,qBAAKI,IAAI,UAAUC,IAAG,+BAA0B,GAAGL,EAAG,EAAhC,6BACtB,gCACC,6BAAKC,IACL,4BAAIC,WCeOI,EArBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAIlB,OACC,8BAEIA,EAASC,KAAI,SAACC,EAAMC,GACtB,OACC,cAAC,EAAD,CAECV,GAAIO,EAASG,GAAGV,GAChBC,KAAMM,EAASG,GAAGT,KAClBC,MAAOK,EAASG,GAAGR,OAHdQ,SCHIC,EAPA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAY,SAAUC,OAAQ,SAA5C,SACEH,EAAMI,YCSKC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKhB,UAAU,MAAf,SACC,uBACCA,UAAU,kCACViB,KAAK,SACLC,YAAY,oBACZC,SAAUH,O,4BCWCI,E,kDAjBd,WAAYX,GAAQ,IAAD,8BAClB,cAAMA,IACDY,MAAQ,CACZC,UAAW,GAHM,E,qDAOnB,WACCC,KAAKC,SAAS,CAACF,UAAU,M,oBAE1B,WACC,OAAGC,KAAKF,MAAMC,SACN,oBAAItB,UAAU,YAAd,0DAEDuB,KAAKd,MAAMI,a,GAfQY,a,MCyDbC,MApDf,WAAc,MAQmBC,mBAAS,IAR5B,mBAQNvB,EARM,KAQIwB,EARJ,OASyBD,mBAAS,IATlC,mBASNZ,EATM,KASOc,EATP,KAUbC,qBAAU,WACTC,MAAM,8CACLC,MAAK,SAAAC,GACL,OAAOA,EAASC,UAEhBF,MAAK,SAAAG,GACLP,EAAYO,QAEZ,IAWF,IAMMC,EAAkBhC,EAASiC,QAAO,SAAAC,GACvC,OAAOA,EAAQxC,KAAKyC,cAAcC,SAASzB,EAAYwB,kBAExD,OAAQnC,EAASqC,OAGf,sBAAKzC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWgB,aAdS,SAAC0B,GACvBb,EAAea,EAAMC,OAAOC,UAc1B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUxC,SAAUgC,WAPxB,oBAAIpC,UAAU,WAAd,2CClCa6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4a1fea7.chunk.js","sourcesContent":["import React from 'react';\r\n//import './Card.css';\r\nconst Card =({id, name, email}) =>{\r\n\treturn (\r\n\t\t<div className='tc bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5' id='flip-vertical-left'>\r\n\t\t\t<img alt='monster' src={`https://robohash.org/${99*id+1}}?set=set2&size=200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({Monsters}) =>{\r\n\t/*if(true) {\r\n\t\tthrow new Error('Monsters hacked into the system');\r\n\t}*/\r\n\treturn (\r\n\t\t<div>\r\n\t    {\r\n    \t\tMonsters.map((user, i) =>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={Monsters[i].id} \r\n\t\t\t\t\t\tname={Monsters[i].name} \r\n\t\t\t\t\t\temail={Monsters[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t}\r\n\t    </div>\r\n\t);\r\n}\r\nexport default CardList;","import React from 'react'; \r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY : 'scroll', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba br3 b--red bg-washed-red'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='Find your Monster'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\t\r\n\t);\r\n}\r\nexport default SearchBox;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError : false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch() {\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\trender() {\r\n\t\tif(this.state.hasError) {\r\n\t\t\treturn <h1 className='tc yellow'>It seems we are about to be attacked. Run...</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nfunction App(){\r\n\t/*constructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tMonsters: [],\r\n\t\t\tsearchField: ''\r\n\t\t}\r\n\t}*/\r\n\tconst [Monsters, setMonsters] = useState([]);\r\n\tconst [searchField, setSearchField] = useState('');\r\n\tuseEffect(()=>{\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(users=> {\r\n\t\t\tsetMonsters(users);\r\n\t\t});\r\n\t},[])\r\n\t/*\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(users=> {\r\n\t\t\tthis.setState({ Monsters: users})\r\n\t\t});\r\n\t}*/\r\n\tconst onSearchChange = (event) => {\r\n\t\tsetSearchField(event.target.value);\r\n\t\t//this.setState({searchField : event.target.value});\r\n\t}\r\n\t\r\n\t//const {Monsters, searchField} = this.state;\r\n\tconst filteredMonsters =Monsters.filter(monster => {\r\n\t\treturn monster.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t})\r\n\treturn !Monsters.length ? \r\n\t\t<h2 className='tc white'>Monsters approaching ...... </h2> :\r\n\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>Monsterverse</h1>\r\n\t\t\t\t<SearchBox searchChange={onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CardList Monsters={filteredMonsters}/>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\t\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}